plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.25'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.25'
    id "org.jetbrains.kotlin.plugin.allopen" version "2.0.21"
}

group = 'org.jy'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(19)
    }
}


apply plugin: "kotlin-allopen"

allOpen {
    annotation("jakarta.persistence.Entity")
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'com.h2database:h2'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    runtimeOnly 'com.mysql:mysql-connector-j'

    //security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation "io.jsonwebtoken:jjwt-api:0.11.5"
    implementation "io.jsonwebtoken:jjwt-jackson:0.11.5"
    implementation "io.jsonwebtoken:jjwt-impl:0.11.5"

    //validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.apache.commons:commons-pool2:2.12.0'

    //quartz
    implementation 'org.springframework.boot:spring-boot-starter-quartz'

    //smtp
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // Google Cloud Vision API 클라이언트 라이브러리
    implementation 'com.google.cloud:google-cloud-vision:3.34.0'

    //websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    //s3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    //sentry
    implementation 'io.sentry:sentry-spring-boot-starter-jakarta:7.9.0'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'

    //kotlin logging
    implementation 'io.github.oshai:kotlin-logging-jvm:5.1.0'
    implementation("net.logstash.logback:logstash-logback-encoder:8.0")

}

kotlin {
    compilerOptions {
        freeCompilerArgs.addAll '-Xjsr305=strict'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

jar {
    enabled = false  // plain JAR 생성 비활성화
}

bootJar {
    archiveFileName = 'jamye-0.0.1-SNAPSHOT.jar'
}